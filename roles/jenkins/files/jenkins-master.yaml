apiVersion: v1
kind: ServiceAccount
metadata:
  name: jenkins-master
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: jenkins-master
rules:
- apiGroups:
  - ''
  resources:
  - pods
  verbs: [create, delete, get, list, patch, update, watch]
- apiGroups:
  - ''
  resources:
  - pods/exec
  verbs: [create, delete, get, list, patch, update, watch]
- apiGroups:
  - ''
  resources:
  - pods/log
  verbs: [get, list, watch]
- apiGroups:
  - ''
  resources:
  - events
  verbs: [get, list, watch]
- apiGroups:
  - ''
  resources:
  - secrets
  verbs: [get]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: jenkins-master
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: jenkins-master
subjects:
- kind: ServiceAccount
  name: jenkins-master
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: local-storage
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: jenkins-pv-volume
spec:
  capacity:
    storage: 4Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Delete
  storageClassName: local-storage
  # this directory represents the mounted local storage device and contains the data stored in the PersistentVolume
  local:
    path: /var/jenkins_home
  # the kubemaster node contains the data stored in the PersistentVolume
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - kubemaster
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jenkins-pvc-volume
spec:
  accessModes:
  - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 4Gi
  storageClassName: local-storage
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jenkins-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jenkins-master
  template:
    metadata:
      labels:
        app: jenkins-master
    spec:
      serviceAccountName: jenkins-master
      securityContext:
        runAsUser: 1002
        runAsGroup: 1002
        fsGroup: 1002
      nodeSelector:
        # the Jenkins master pod *must* run on the master node since we use a local PersistentVolume
        kubernetes.io/hostname: kubemaster
      containers:
      - name: jenkins-master
        image: jenkins/jenkins:latest
        imagePullPolicy: Always
        env:
            # to disable the Jenkins initial setup admin password
        - name: JAVA_OPTS
          value: -Djenkins.install.runSetupWizard=false
        ports:
        - name: http-port
          containerPort: 8080
        - name: jnlp-port
          containerPort: 50000
        volumeMounts:
        - name: jenkins-pv-storage
              # value of $JENKINS_HOME in the official Docker image for Jenkins
          mountPath: /var/jenkins_home
        resources:
          limits:
            memory: 512Mi
            cpu: '1'
          requests:
            memory: 256Mi
            cpu: '0.2'
      volumes:
      - name: jenkins-pv-storage
        persistentVolumeClaim:
          claimName: jenkins-pvc-volume
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-http
spec:
  type: NodePort
  ports:
  - nodePort: 31000
    port: 80
    targetPort: 8080
    protocol: TCP
  selector:
    app: jenkins-master
---
apiVersion: v1
kind: Service
metadata:
  name: jenkins-jnlp
spec:
  type: ClusterIP
  ports:
  - protocol: TCP
    port: 50000
    targetPort: 50000
  selector:
    app: jenkins-master
